{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../speicher.service\";\nimport * as i2 from \"../dialog-toast-helfer.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nexport let HomePage = /*#__PURE__*/(() => {\n  class HomePage {\n    /**\r\n     * Konstruktor für Dependency Injection.\r\n     */\n    constructor(speicherService, dialogToastHelferService) {\n      this.speicherService = speicherService;\n      this.dialogToastHelferService = dialogToastHelferService;\n      /** Abkürzung, für die die Bedeutungen gesucht werden sollen; wird mit Two-Way-Binding an `ion-input`-Element gebunden. */\n\n      this.abkuerzung = \"\";\n    }\n    /**\r\n     * Event-Handler-Methode für Buttons zum Suchen nach einer Abkürzung.\r\n     * <br><br>\r\n     *\r\n     * Das Eingabefeld mit der Abkürzung wird nur dann gelöscht, wenn die Suche erfolgreich war.\r\n     */\n\n\n    onSuchenButton() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.abkuerzung === null || this.abkuerzung === undefined || this.abkuerzung.trim().length == 0) {\n          this.dialogToastHelferService.zeigeDialog(\"Ungültige Eingabe\", \"Bitte zu suchende Abkürzung eingeben!\");\n          return;\n        }\n\n        const bedeutungenArray = yield this.speicherService.holeBedeutungenFuerAbk(this.abkuerzung);\n\n        if (bedeutungenArray !== null && bedeutungenArray !== undefined) {\n          const anzahl = bedeutungenArray.length;\n          let bedeutungenString = \"\";\n          const lastIndex = anzahl - 1;\n\n          for (let i = 0; i < anzahl; i++) {\n            bedeutungenString += bedeutungenArray[i];\n            +\"<br><br>\";\n\n            if (anzahl > 0 && i !== lastIndex) {\n              bedeutungenString += \"<br><br>\";\n            }\n          }\n\n          this.dialogToastHelferService.zeigeDialog(`Ergebnis für \"${this.abkuerzung}\" (${anzahl}):`, bedeutungenString);\n          this.abkuerzung = \"\";\n        } else {\n          this.dialogToastHelferService.zeigeDialog(\"Nichts gefunden\", `Keine Bedeutungen für \"${this.abkuerzung}\" gefunden.`);\n        }\n      });\n    }\n\n  }\n\n  HomePage.ɵfac = function HomePage_Factory(t) {\n    return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.SpeicherService), i0.ɵɵdirectiveInject(i2.DialogToastHelferService));\n  };\n\n  HomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePage,\n    selectors: [[\"app-home\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [3, \"fullscreen\"], [\"position\", \"fixed\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"expand\", \"block\", 3, \"click\"]],\n    template: function HomePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Abk\\u00FCrzungsverzeichnis\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"p\");\n        i0.ɵɵtext(8, \"Auf dieser Seite k\\u00F6nnen Sie nach Bedeutungen f\\u00FCr Abk\\u00FCrzungen, die Sie zuvor in der App gespeichert haben, suchen.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 3);\n        i0.ɵɵtext(11, \"Abk\\u00FCrzung:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function HomePage_Template_ion_input_ngModelChange_12_listener($event) {\n          return ctx.abkuerzung = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-button\", 5);\n        i0.ɵɵlistener(\"click\", function HomePage_Template_ion_button_click_13_listener() {\n          return ctx.onSuchenButton();\n        });\n        i0.ɵɵtext(14, \"Bedeutungen suchen\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.abkuerzung);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonMenuButton, i3.IonTitle, i3.IonContent, i3.IonItem, i3.IonLabel, i3.IonInput, i3.TextValueAccessor, i4.NgControlStatus, i4.NgModel, i3.IonButton],\n    styles: [\"#container[_ngcontent-%COMP%]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%)}#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{font-size:20px;line-height:26px}#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}\"]\n  });\n  return HomePage;\n})();","map":null,"metadata":{},"sourceType":"module"}